// =============================================================================
// AUSTA Integration Platform - Global Stylesheet
// Version: 1.0.0
// Framework Versions:
// @angular/material/theming v15.0.0
// @ionic/angular v6.0.0
// =============================================================================

// Import core design system
@use '@angular/material/theming' as mat;
@use '@ionic/angular' as ionic;
@use './_variables' as vars;
@use './_mixins' as mix;
@use './_themes' as themes;
@use './_typography' as type;

// =============================================================================
// Global Reset & Base Styles
// =============================================================================

html {
  box-sizing: border-box;
  font-size: 100%;
  height: 100%;
  scroll-behavior: smooth;
  text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

*, *::before, *::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  @extend .typography-base;
  min-height: 100%;
  background-color: var(--background);
  color: var(--text-primary);
  overflow-x: hidden;
  
  &.loading {
    cursor: wait;
  }
}

// =============================================================================
// Layout & Container System
// =============================================================================

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: map-get(vars.$spacing, grid, margin);
  padding-left: map-get(vars.$spacing, grid, margin);
  container-type: inline-size;
  
  @include mix.responsive-breakpoint('sm') {
    max-width: 720px;
  }
  
  @include mix.responsive-breakpoint('md') {
    max-width: 960px;
  }
  
  @include mix.responsive-breakpoint('lg') {
    max-width: 1280px;
  }
}

.grid {
  @include mix.grid-layout(1, map-get(vars.$spacing, grid, column-gap));
  
  @include mix.responsive-breakpoint('sm') {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include mix.responsive-breakpoint('md') {
    grid-template-columns: repeat(3, 1fr);
  }
  
  @include mix.responsive-breakpoint('lg') {
    grid-template-columns: repeat(4, 1fr);
  }
}

// =============================================================================
// Typography Extensions
// =============================================================================

@extend .headings;
@extend .body-text;

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// =============================================================================
// Accessibility Utilities
// =============================================================================

.sr-only {
  @include mix.screen-reader-only;
}

.focus-visible {
  @include mix.focus-outline(
    var(--primary),
    var(--focus-ring-offset),
    true
  );
}

// High contrast mode enhancements
@media (forced-colors: active) {
  .high-contrast-visible {
    forced-color-adjust: none;
    color: CanvasText;
    background-color: Canvas;
    border: 1px solid CanvasText;
  }
}

// =============================================================================
// Component Base Styles
// =============================================================================

.card {
  @include mix.elevation(1);
  background-color: var(--surface);
  border-radius: 4px;
  padding: map-get(vars.$spacing, component, card-padding);
  
  @media (prefers-color-scheme: dark) {
    @include mix.elevation(1, true);
  }
}

.button {
  @include mix.material-transition(all);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  font-weight: map-get(vars.$typography, weights, medium);
  cursor: pointer;
  
  &:disabled {
    opacity: var(--disabled-opacity);
    cursor: not-allowed;
  }
  
  &--primary {
    background-color: var(--primary);
    color: #ffffff;
    
    &:hover {
      background-color: var(--primary-dark);
    }
  }
}

// =============================================================================
// Form Elements
// =============================================================================

.form-control {
  width: 100%;
  padding: map-get(vars.$spacing, component, input-padding);
  border: 1px solid var(--text-secondary);
  border-radius: 4px;
  background-color: var(--surface);
  color: var(--text-primary);
  
  &:focus {
    @include mix.focus-outline(var(--primary), 0);
    border-color: var(--primary);
  }
  
  &::placeholder {
    color: var(--text-secondary);
    opacity: var(--disabled-opacity);
  }
}

// =============================================================================
// Animation & Transitions
// =============================================================================

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.fade-in {
  @include mix.fade-in(0.3s, ease-in-out);
}

// Respect reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// =============================================================================
// RTL Support
// =============================================================================

[dir="rtl"] {
  .container {
    padding-right: map-get(vars.$spacing, grid, margin);
    padding-left: map-get(vars.$spacing, grid, margin);
  }
  
  .button {
    flex-direction: row-reverse;
  }
}

// =============================================================================
// Print Styles
// =============================================================================

@media print {
  body {
    background-color: #ffffff;
    color: #000000;
  }
  
  .no-print {
    display: none !important;
  }
  
  a[href]::after {
    content: " (" attr(href) ")";
  }
}