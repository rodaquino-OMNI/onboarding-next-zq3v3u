// Import core design system variables and mixins
@use '../../../assets/scss/_variables' as vars;
@use '../../../assets/scss/_mixins' as mix;

// Main breadcrumb container
.breadcrumb {
  @include mix.flex-layout(row);
  padding: map-get(vars.$spacing, unit) map-get(vars.$spacing, unit) * 2;
  margin-bottom: map-get(vars.$spacing, unit) * 3;
  background-color: transparent;
  border-radius: 4px;
  transition: background-color 0.2s ease-in-out;

  // Mobile optimization
  @media screen and (max-width: map-get(vars.$breakpoints, xs)) {
    padding: map-get(vars.$spacing, unit);
    margin-bottom: map-get(vars.$spacing, unit) * 2;
  }
}

// Breadcrumb list container
.breadcrumb-list {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: map-get(vars.$spacing, unit);
  list-style: none;
  margin: 0;
  padding: 0;
}

// Individual breadcrumb item
.breadcrumb-item {
  display: flex;
  align-items: center;
  color: map-get(vars.$colors, text, secondary, light);
  font-size: map-get(vars.$typography, base-size);
  line-height: map-get(vars.$typography, line-heights, body);
  white-space: nowrap;
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;

  @media (prefers-color-scheme: dark) {
    color: map-get(vars.$colors, text, secondary, dark);
  }

  // Mobile optimization
  @media screen and (max-width: map-get(vars.$breakpoints, xs)) {
    font-size: calc(map-get(vars.$typography, base-size) * map-get(vars.$typography, responsive-scale, sm));
    max-width: 150px;
  }

  // Tablet optimization
  @media screen and (min-width: map-get(vars.$breakpoints, sm)) {
    max-width: 180px;
  }
}

// Breadcrumb separator
.breadcrumb-separator {
  margin: 0 map-get(vars.$spacing, unit);
  color: map-get(vars.$colors, text, secondary, light);
  user-select: none;
  aria-hidden: true;

  @media (prefers-color-scheme: dark) {
    color: map-get(vars.$colors, text, secondary, dark);
  }
}

// Interactive breadcrumb link
.breadcrumb-link {
  color: map-get(vars.$colors, primary);
  text-decoration: none;
  padding: calc(map-get(vars.$spacing, unit) * 0.5) map-get(vars.$spacing, unit);
  border-radius: 4px;
  transition: all 0.2s ease-in-out;

  &:hover {
    text-decoration: underline;
    background-color: rgba(map-get(vars.$colors, primary), map-get(vars.$colors, opacity, hover));
  }

  // Enhanced focus state for accessibility
  @include mix.focus-outline(map-get(vars.$colors, primary), 2px, true);

  // High contrast mode support
  @media (forced-colors: active) {
    &:hover {
      text-decoration: underline;
      background-color: Highlight;
      color: HighlightText;
    }
  }
}

// Current/active breadcrumb item
.breadcrumb-current {
  font-weight: map-get(vars.$typography, weights, medium);
  color: map-get(vars.$colors, text, primary, light);
  cursor: default;
  aria-current: page;

  @media (prefers-color-scheme: dark) {
    color: map-get(vars.$colors, text, primary, dark);
  }
}