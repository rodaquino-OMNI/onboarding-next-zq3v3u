// Import core design system variables and mixins
@use '../../../../../../../assets/scss/variables' as vars;
@use '../../../../../../../assets/scss/mixins' as mix;

// =============================================================================
// Registration Container
// =============================================================================

.register-container {
  @include mix.flex-layout(column);
  min-height: 100vh;
  padding: map-get(vars.$spacing, scale, xl);
  background-color: map-get(vars.$colors, background, light);
  
  @include mix.container-query(map-get(vars.$breakpoints, sm)) {
    padding: map-get(vars.$spacing, scale, xxl);
  }

  @media (prefers-color-scheme: dark) {
    background-color: map-get(vars.$colors, background, dark);
    color: map-get(vars.$colors, text, primary, dark);
  }
}

// =============================================================================
// Registration Form
// =============================================================================

.register-form {
  width: 100%;
  max-width: rem(480);
  margin: 0 auto;
  padding: map-get(vars.$spacing, scale, lg);
  background-color: map-get(vars.$colors, surface, light);
  border-radius: 8px;
  
  @include mix.elevation(2);
  @include mix.material-transition(transform);

  @media (prefers-color-scheme: dark) {
    background-color: map-get(vars.$colors, surface, dark);
    @include mix.elevation(2, true);
  }

  @media (forced-colors: active) {
    border: 2px solid CanvasText;
  }
}

// =============================================================================
// Form Header
// =============================================================================

.form-header {
  text-align: center;
  margin-bottom: map-get(vars.$spacing, scale, xl);
  
  h1 {
    font-family: map-get(vars.$typography, font-family);
    font-size: rem(24);
    font-weight: map-get(vars.$typography, weights, medium);
    color: map-get(vars.$colors, text, primary, light);
    margin-bottom: map-get(vars.$spacing, scale, xs);

    @media (prefers-color-scheme: dark) {
      color: map-get(vars.$colors, text, primary, dark);
    }
  }

  p {
    color: map-get(vars.$colors, text, secondary, light);
    font-size: rem(16);
    line-height: map-get(vars.$typography, line-heights, body);

    @media (prefers-color-scheme: dark) {
      color: map-get(vars.$colors, text, secondary, dark);
    }
  }
}

// =============================================================================
// Form Groups
// =============================================================================

.form-group {
  margin-bottom: map-get(vars.$spacing, scale, md);
  position: relative;

  label {
    display: block;
    margin-bottom: map-get(vars.$spacing, scale, xs);
    font-weight: map-get(vars.$typography, weights, medium);
    color: map-get(vars.$colors, text, primary, light);

    @media (prefers-color-scheme: dark) {
      color: map-get(vars.$colors, text, primary, dark);
    }
  }
}

// =============================================================================
// Form Controls
// =============================================================================

.form-control {
  width: 100%;
  padding: map-get(vars.$spacing, component, input-padding);
  border: 1px solid rgba(0, 0, 0, 0.12);
  border-radius: 4px;
  font-family: map-get(vars.$typography, font-family);
  font-size: rem(16);
  
  @include mix.material-transition(border-color);
  @include mix.focus-outline(map-get(vars.$colors, primary), 2px, true);

  &::placeholder {
    color: map-get(vars.$colors, text, secondary, light);
  }

  @media (prefers-color-scheme: dark) {
    border-color: rgba(255, 255, 255, 0.12);
    background-color: rgba(255, 255, 255, 0.05);
    color: map-get(vars.$colors, text, primary, dark);

    &::placeholder {
      color: map-get(vars.$colors, text, secondary, dark);
    }
  }

  &.error {
    border-color: map-get(vars.$colors, state, error);
    
    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      75% { transform: translateX(5px); }
    }
    
    animation: shake 0.2s ease-in-out;
  }
}

// =============================================================================
// Submit Button
// =============================================================================

.submit-button {
  width: 100%;
  padding: map-get(vars.$spacing, scale, md);
  background-color: map-get(vars.$colors, primary);
  color: white;
  border: none;
  border-radius: 4px;
  font-weight: map-get(vars.$typography, weights, medium);
  font-size: rem(16);
  
  @include mix.material-transition(transform);
  @include mix.focus-outline(white, 2px, true);
  @include mix.elevation(1);

  &:hover:not(:disabled) {
    transform: translateY(-1px);
    @include mix.elevation(2);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
    @include mix.elevation(1);
  }

  &:disabled {
    opacity: map-get(vars.$colors, opacity, disabled);
    cursor: not-allowed;
  }

  &.loading {
    position: relative;
    pointer-events: none;
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 20px;
      height: 20px;
      margin: -10px 0 0 -10px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-top-color: white;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }
  }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

// =============================================================================
// Error Messages
// =============================================================================

.error-message {
  color: map-get(vars.$colors, state, error);
  font-size: rem(14);
  margin-top: map-get(vars.$spacing, scale, xs);
  
  @include mix.fade-in(0.2s);
}

// =============================================================================
// Print Styles
// =============================================================================

@media print {
  .register-container {
    background: none;
    padding: 0;
    min-height: auto;
  }

  .register-form {
    box-shadow: none;
    border: 1px solid black;
    max-width: none;
  }

  .submit-button {
    display: none;
  }
}