@use '../../../../assets/scss/_variables' as vars;

// Container for video control buttons
.video-controls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: map-get(vars.$spacing, 'unit') * 2;
  padding: map-get(vars.$spacing, 'unit') * 2;
  background: rgba(0, 0, 0, 0.5);
  border-radius: map-get(vars.$spacing, 'unit');
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px); // Safari support
  will-change: transform;
  z-index: 100;
  direction: inherit; // RTL support
  position: fixed;
  bottom: map-get(vars.$spacing, 'unit') * 3;
  left: 50%;
  transform: translateX(-50%);
}

// Base styles for control buttons
.control-button {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  color: #FFFFFF;
  transition: all 0.2s ease-in-out;
  min-width: 48px; // Ensure minimum touch target size
  touch-action: manipulation;
  user-select: none;
  cursor: pointer;
  border: none;
  position: relative;
  
  // Focus state
  &:focus-visible {
    outline: 3px solid map-get(vars.$colors, 'primary');
    outline-offset: 2px;
  }
  
  // Hover state
  &:hover:not(:disabled) {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.05);
  }
  
  // Active state
  &:active:not(:disabled) {
    transform: scale(0.95);
  }
  
  // Disabled state
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  // Error state (e.g., for muted mic or disabled camera)
  &.error {
    background: rgba(map-get(vars.$colors, 'state', 'error'), 0.2);
    
    &:hover:not(:disabled) {
      background: rgba(map-get(vars.$colors, 'state', 'error'), 0.3);
    }
  }
  
  // Icon styling
  mat-icon {
    font-size: 24px;
    width: 24px;
    height: 24px;
    line-height: 24px;
  }
}

// Mobile-specific styles
@media (max-width: map-get(vars.$breakpoints, 'xs')) {
  .video-controls {
    padding: map-get(vars.$spacing, 'unit');
    gap: map-get(vars.$spacing, 'unit');
    bottom: map-get(vars.$spacing, 'unit') * 2;
    
    // Adjust for iOS safe area
    @supports (padding-bottom: env(safe-area-inset-bottom)) {
      padding-bottom: calc(#{map-get(vars.$spacing, 'unit')} + env(safe-area-inset-bottom));
    }
  }
  
  .control-button {
    width: 40px;
    height: 40px;
    min-width: 40px;
    
    mat-icon {
      font-size: 20px;
      width: 20px;
      height: 20px;
      line-height: 20px;
    }
  }
}

// High contrast mode adjustments
@media (prefers-contrast: high) {
  .control-button {
    border: 2px solid #FFFFFF;
    background: #000000;
    
    &:focus-visible {
      outline-width: 4px;
    }
    
    &.error {
      border-color: map-get(vars.$colors, 'state', 'error');
    }
  }
}

// Dark theme support
:host-context(.dark-theme) {
  .video-controls {
    background: rgba(0, 0, 0, 0.7);
  }
  
  .control-button {
    background: rgba(255, 255, 255, 0.15);
    
    &:hover:not(:disabled) {
      background: rgba(255, 255, 255, 0.25);
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .control-button {
    transition: none;
    
    &:hover:not(:disabled),
    &:active:not(:disabled) {
      transform: none;
    }
  }
}

// RTL support
[dir="rtl"] {
  .video-controls {
    direction: rtl;
  }
}