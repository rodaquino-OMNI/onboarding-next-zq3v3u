# Apache configuration file for Laravel backend API
# Implements security headers, URL rewriting, and performance optimization
# Required modules: mod_rewrite (v2.4+), mod_headers (v2.4+), mod_expires (v2.4+), mod_deflate (v2.4+)

# Basic Apache Options
Options -Indexes +FollowSymLinks -MultiViews

# Enable URL Rewriting
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect Trailing Slashes
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
</IfModule>

# Security Headers
<IfModule mod_headers.c>
    # Prevent MIME type sniffing
    Header set X-Content-Type-Options "nosniff"

    # Enable XSS filtering
    Header set X-XSS-Protection "1; mode=block"

    # Prevent clickjacking
    Header set X-Frame-Options "SAMEORIGIN"

    # Enable HSTS
    Header set Strict-Transport-Security "max-age=31536000; includeSubDomains"

    # Content Security Policy
    Header set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' https://*.amazonaws.com"

    # Referrer Policy
    Header set Referrer-Policy "strict-origin-when-cross-origin"

    # Permissions Policy
    Header set Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()"

    # CORS Headers
    Header set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header set Access-Control-Allow-Headers "X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept"
    Header set Access-Control-Allow-Credentials "true"
    Header set Access-Control-Max-Age "86400"

    # Remove X-Powered-By header
    Header unset X-Powered-By
</IfModule>

# Cache Control
<IfModule mod_expires.c>
    ExpiresActive On
    
    # Images
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    
    # CSS, JavaScript
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    
    # Disable caching for API responses
    ExpiresByType application/json "access plus 0 seconds"
</IfModule>

# Content Compression
<IfModule mod_deflate.c>
    # Force compression for mangled headers
    <IfModule mod_setenvif.c>
        <IfModule mod_headers.c>
            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
            RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
        </IfModule>
    </IfModule>

    # Compress all output labeled with one of the following media types
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json
    
    # Set compression level
    DeflateCompressionLevel 9
</IfModule>

# Disable server signature
ServerSignature Off